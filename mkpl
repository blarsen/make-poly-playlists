#!/bin/bash

usage() {
    cat <<EOD

Create M3U playlists for music found in a directory hierarchy

Usage:
    mkpl [options] [MUSICDIR]

    MUSICDIR is the directory that is searched for music and by default the place where
    the playlists are written. If MUSICDIR isn't specified the current working directory
    is used.

    Options:
        -h
            Display this message and terminate
        -v 
            Verbose - give messages as the script runs
        -o
            Output directory - write playlists here. By default the playlists are
            written to MUSICDIR. Note that even if you change the output directory
            the entries in the playlists will be generated relative to MUSICDIR.
        -p
            Chord Poly disk handling. This includes deleting the Poly database files from
            the MUSICDIR if present. This will force the Poly to rebuild its database once the
            Poly is restarted with the TF card mounted. Not doing this will likely disable all
            playlists on the card.

EOD
}

progress() {
    if [ "$VERBOSE" = "1" ]; then
        echo $1
    fi
}

# Default settings changeable by options
VERBOSE=0
POLYDISK=0
ZAPOLDPL=0

# Settings
TMPDIR=/tmp
declare -a POLYDBFILES=("art-cache-a.tar.gz" "dlna-sdfree.dat" "mpd.db")

TEMP=$(getopt -o 'hvo:pz' -- "$@")

if [ $? -ne 0 ]; then
        usage
        exit 1
fi

eval set -- "$TEMP"
unset TEMP

while true; do
    case "$1" in
        '-h')
            usage
            exit
        ;;
        '-v')
            VERBOSE=1
            shift
            continue
        ;;
        '-p')
            POLYDISK=1
            shift
            continue
        ;;
        '-o')
            PLDIR=$2
            shift 2
            continue
        ;;
        '-z')
            ZAPOLDPL=1
            shift 
            continue
        ;;
        '--')
            shift
            break
        ;;
    esac
done

MUSICDIR=$1

if [ -z "$MUSICDIR" ]; then
  MUSICDIR=.
fi

if [ -z "$PLDIR" ]; then
  PLDIR="$MUSICDIR"
fi

if [ "$POLYDISK" = "1" ]; then
    progress "Deleting Chord Poly database files from $MUSICDIR"
    for DBFILE in "${POLYDBFILES[@]}"
    do
        if [ -f "$MUSICDIR/$DBFILE" ]; then
            rm -f "$MUSICDIR/$DBFILE"
        else
            progress "Database file $MUSICDIR/$DBFILE didn't exist, ignoring"
        fi
    done
    rm -f $POLYDBFILES
fi

if [ "$ZAPOLDPL" = "1" ]; then
    progress "Deleting existing playlists before creating new ones"
    rm -f *.m3u
fi


progress "Scanning $1 for music"

TMPMUSIC=$(mktemp "$TMPDIR"/tmp-mkpl.music.XXXXXXXX)

find "$MUSICDIR" | \
    grep -i -E '\.(flac|mp3)$' | \
    sort | \
    awk -v ORS='\r\n' 1 - | \
    sed 's|^'"$MUSICDIR"'/||' >"$TMPMUSIC"

COUNT=$(cat "$TMPMUSIC" | wc -l)
progress "Found $COUNT music files in $MUSICDIR"

TMPDIRS=$(mktemp "$TMPDIR"/tmp-mkpl.dirs.XXXXXXXX)
cat "$TMPMUSIC" | sed 's|/[^/]*$||' | sort | uniq >"$TMPDIRS"

COUNT=$(cat "$TMPDIRS" | wc -l)
progress "Found $COUNT directories containing music"

cat "$TMPDIRS" | while read DIR 
do
    PLAYLIST="$PLDIR/"$(echo "$DIR" | sed 's|/|-|g').m3u
    grep "$DIR" "$TMPMUSIC" > "$PLAYLIST"
    progress "Created playlist $PLAYLIST containing $(cat "$PLAYLIST"|wc -l) tracks"
done
